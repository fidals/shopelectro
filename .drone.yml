branches: master

workspace:
  base: /drone
  path: shopelectro/


pipeline:
  # @todo #352:60m Use ready image for python in drone. stb2
  #  - rm pip-install step
  #  - refactor test step
  #  - rm/modify docker-build step
  pip-install:
    image: python
    commands:
      - pip install -r requirements.txt
      - rm -rf /usr/app/deps/site-packages
      - mv /usr/local/lib/python3.6/site-packages /drone/deps
    when:
      event: [push, pull_request]

#  npm:  # old `npm install`
#    image: node:slim
#    environment:
#      - DEPS_DIR=/drone/deps
#    commands:
#      - npm install
#      - npm install -g gulp-cli
#      - gulp build
#    when:
#      event: [push, pull_request]

  npm-install:  # new `npm install`
    image: docker/compose:1.22.0
    environment:
      - DEPS_DIR=/drone/deps
    commands:
      - cd docker/
      - cp drone_env/.env . && cp drone_env/* env_files/
      # nodejs build is not in `docker-build` section,
      # because we have this deps:
      # build nodejs -> gulp build -> build python-prod
      - docker-compose -f docker-compose-build.yml build nodejs
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker:/var/lib/docker
    when:
      event: [push, pull_request]

  npm-push:
    image: docker:latest
    environment:
      - DOCKER_HUB_LOGIN=${DOCKER_HUB_LOGIN}
      - DOCKER_HUB_PASSWORD=${DOCKER_HUB_PASSWORD}
    commands:
      - docker login -u $DOCKER_HUB_LOGIN -p $DOCKER_HUB_PASSWORD
      - docker push fidals/se-nodejs:dev
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    when:
      event: push
    secrets: [ DOCKER_HUB_LOGIN, DOCKER_HUB_PASSWORD ]

  gulp-build:
    image: fidals/se-nodejs:dev
    pull: true
    environment:
      - DEPS_DIR=/drone/deps
    commands:
      - mv ../node_modules .
      - gulp build
    when:
      event: [push, pull_request]

  test:
    image: python
    environment:
      - TEST_ENV=true
      - DJANGO_SETTINGS_MODULE=shopelectro.settings.drone
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=test
      - POSTGRES_URL=postgres
      - POSTGRES_DB=test
      - RABBITMQ_DEFAULT_USER=rabbitmq
      - RABBITMQ_DEFAULT_PASS=test
      - RABBITMQ_URL=rabbitmq
      - RABBITMQ_PORT=5672
      - SELENIUM_URL=http://selenium:4444/wd/hub
      - FTP_IP=${FTP_IP}
      - FTP_USER=${FTP_USER}
      - FTP_PASS=${FTP_PASS}
      # Hardcoded env values because of drone secret's bug. See stb#263
      - SELENIUM_TIMEOUT_SECONDS=180
      - SELENIUM_WAIT_SECONDS=180
    commands:
      - cp -r /drone/shopelectro/build/ front/
      - cp -r /drone/deps/* /usr/local/lib/python3.6/site-packages
      - python manage.py migrate
      - python manage.py excel
      - python manage.py price
      - python manage.py collectstatic --noinput
      - python manage.py test --parallel --liveserver=test:8021-8029
    secrets: [ FTP_IP, FTP_USER, FTP_PASS ]
    when:
      event: [push, pull_request]

  lint-coala:
    image: fidals/coala-ci
    group: lint
    commands:
      - coala --ci -j 2
    when:
      event: pull_request

  lint-pdd:
    image: fidals/pdd-ci
    group: lint
    commands:
      - pdd --verbose
        --exclude=node_modules/**/* --exclude=static/**/*
        --exclude=media/**/* --exclude=doc/build/**/*
        --exclude=.idea/**/*
        --exclude=front/build
        --exclude=front/images
        --exclude=**/*.pyc
        --exclude=**/*.jpg
        -f report.xml
    when:
      event: pull_request

  docker-build:
    image: docker/compose:1.17.1
    environment:
      - DEPS_DIR=/drone/deps
    commands:
      - cp -r /drone/shopelectro/build/ front/
      - cd docker
      # Build python images with sources and static files
      - docker-compose -f docker-compose-build.yml build --no-cache nodejs python-dev python-prod
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    when:
      event: push

  docker-push:
    image: docker:latest
    environment:
      - DOCKER_HUB_LOGIN=${DOCKER_HUB_LOGIN}
      - DOCKER_HUB_PASSWORD=${DOCKER_HUB_PASSWORD}
    commands:
      - docker login -u $DOCKER_HUB_LOGIN -p $DOCKER_HUB_PASSWORD
#      - docker push fidals/se-nodejs:dev
      - docker push fidals/se:dev
      - docker push fidals/se:prod
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    when:
      event: push
    secrets: [ DOCKER_HUB_LOGIN, DOCKER_HUB_PASSWORD ]

  docker-up:
    image: docker/compose:1.17.1
    commands:
      - cp -r /drone/shopelectro/build/ front/
      - cd docker
      - cp drone_env/* env_files/
      - cp drone_env/.env .
      - docker-compose up -d app
      # @todo #396:60m Do drone check `docker-up` service.
      #  Let drone check if started service is available.
      #  Some code draft:
      #  `- if [[ $(curl -Is http://127.0.0.1:8010 | head -1 | grep 200) = '' ]]; then echo 'service '; fi`
      - docker-compose stop
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    when:
      event: [push, pull_request]

services:
  postgres:
    image: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=test
      - POSTGRES_DB=test
    when:
      event: [push, pull_request]

  rabbitmq:
    image: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=rabbitmq
      - RABBITMQ_DEFAULT_PASS=test
    when:
      event: [push, pull_request]

  selenium:
    image: selenium/standalone-chrome-debug:3.10.0
    environment:
      # https://github.com/SeleniumHQ/docker-selenium/issues/392
      - DBUS_SESSION_BUS_ADDRESS=/dev/null
      - SCREEN_WIDTH=1366
      - SCREEN_HEIGHT=768
      - SELENIUM_WAIT_SECONDS=${SELENIUM_WAIT_SECONDS}
      - SELENIUM_TIMEOUT_SECONDS=${SELENIUM_TIMEOUT_SECONDS}
    shm_size: 4G
    volumes: # https://github.com/SeleniumHQ/docker-selenium#running-the-images
      - /dev/shm:/dev/shm
    when:
      event: [push, pull_request]
