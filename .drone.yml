branches: master

workspace:
  base: /drone
  path: shopelectro/


pipeline:

  python-build:
    image: docker/compose:1.22.0
    commands:
     - cp shopelectro/settings/local.py.dist shopelectro/settings/local.py
     - cd docker/
      # Build python images with sources and static files
      - docker-compose -f docker-compose-build.yml build python-dev
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    when:
      event: [push, pull_request]

  docker-up:
    image: docker/compose:1.22.0
    commands:
      - cd docker
      - cp drone_env/* env_files/
      - cp drone_env/.env .
      - docker-compose up -d app-drone
      - sleep 5
      - docker-compose logs app-drone
      - docker-compose exec -T app-drone bash -c "./docker/check-health.sh http://0.0.0.0:8000/"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    when:
      event: [push, pull_request]

services:
  postgres:
    image: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=test
      - POSTGRES_DB=test
    when:
      event: [push, pull_request]

  rabbitmq:
    image: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=rabbitmq
      - RABBITMQ_DEFAULT_PASS=test
    when:
      event: [push, pull_request]

  selenium:
    image: selenium/standalone-chrome-debug:3.10.0
    environment:
      # https://github.com/SeleniumHQ/docker-selenium/issues/392
      - DBUS_SESSION_BUS_ADDRESS=/dev/null
      - SCREEN_WIDTH=1366
      - SCREEN_HEIGHT=768
    shm_size: 4G
    volumes: # https://github.com/SeleniumHQ/docker-selenium#running-the-images
      - /dev/shm:/dev/shm
    when:
      event: [push, pull_request]
