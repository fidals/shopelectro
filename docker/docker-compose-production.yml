
version: '2'
# Anchors
# x-, Docker will treat as an extension and ignore
x-celery: &celery-worker
  image: fidals/se:prod
  restart: always
  env_file:
    - env_files/app
    - env_files/credentials
    - env_files/paths
  depends_on:
    - app
  volumes:
    - ../shopelectro/settings/local.py:$SRC_DIR/shopelectro/settings/local.py
  networks:
    - se-backend

services:
  app:
    image: fidals/se:prod
    container_name: se-python
    restart: always
    env_file:
      - env_files/app
      - env_files/credentials
      - env_files/paths
      - env_files/ports
    environment:
      - PYTHONUNBUFFERED=0
    depends_on:
      - postgres
      - rabbitmq
      - redis
    ports:
      - $VIRTUAL_HOST_PORT
    volumes:
      - ../shopelectro/settings/local.py:$SRC_DIR/shopelectro/settings/local.py
      - ../shopelectro/:$SRC_DIR/shopelectro/
      # contains refarm-site modules
      - $DEPS_DIR
      # contains media files
      - /opt/media/shopelectro/:$SRC_DIR/media/
    networks:
      - se-backend
      - se-frontend
    command: docker/wait-for.sh postgres:5432 -- gunicorn shopelectro.wsgi:application -c /etc/gunicorn.py -b 0.0.0.0:$VIRTUAL_HOST_PORT

  celery-beat:
    <<: *celery-worker
    container_name: se-celery-beat
    command: docker/wait-for.sh rabbitmq:5672 -- celery -A shopelectro beat -l info

  celery-command-worker:
    <<: *celery-worker
    container_name: se-celery-command-worker
    depends_on:
      - app
      - celery-beat
      - selenium
    volumes_from:
      - app
    command: docker/wait-for.sh rabbitmq:5672 -- celery -A shopelectro worker -E -n worker.command@%%h -c 2 -l info -Q command

  celery-default-worker:
    <<: *celery-worker
    container_name: se-celery-default-worker
    command: docker/wait-for.sh rabbitmq:5672 -- celery -A shopelectro worker -E -n worker.default@%%h -c 1 -l info -Q default

  celery-mail-worker:
    <<: *celery-worker
    container_name: se-celery-mail-worker
    command: docker/wait-for.sh rabbitmq:5672 -- celery -A shopelectro worker -E -n worker.mail@%%h -c 2 -l info -Q mail

  nginx:
    image: fidals/se-nginx:prod
    container_name: se-nginx
    restart: always
    env_file:
      - env_files/ports
    depends_on:
      - app
    volumes_from:
      - app
    ports:
      - '$VIRTUAL_HOST_EXPOSE_PORT:80'
    networks:
      - se-frontend
    command: nginx -g 'daemon off;'

  postgres:
    image: postgres:9.5
    restart: always
    container_name: se-postgres
    env_file:
      - env_files/credentials
    networks:
      - se-backend
    volumes:
      - /opt/database/shopelectro:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:management-alpine
    container_name: se-rabbitmq
    restart: always
    env_file:
      - env_files/credentials
    networks:
      - se-backend
    ports:
      - 5672
      - 15672

  redis:
    image: redis:alpine
    container_name: se-redis
    restart: always
    env_file:
      - env_files/credentials
    command: redis-server /data/redis.conf --requirepass $REDIS_PASSWORD
    volumes:
      - ../etc/redis/redis.conf:/data/redis.conf
    networks:
      - se-backend
    ports:
      - 6379

  # provide a remote driver for the check_purchase celery task to
  # periodically check the purchase possibility.
  selenium:
    image: selenium/standalone-chrome-debug:3.14.0
    restart: always
    ports:
      - 4444
    environment:
      - DBUS_SESSION_BUS_ADDRESS=/dev/null
      - SCREEN_WIDTH=1366
      - SCREEN_HEIGHT=768
    networks:
      - se-backend
    # https://github.com/SeleniumHQ/docker-selenium#running-the-images
    shm_size: 4G
    volumes:
      - /dev/shm:/dev/shm


networks:
  se-backend:
  se-frontend:
