version: '2'

services:

  app:
    image: fidals/se:prod
    container_name: se-python
    restart: always
    env_file:
      - env_files/app
      - env_files/credentials
      - env_files/paths
      - env_files/ports
    environment:
      - PYTHONUNBUFFERED=0
    depends_on:
      - postgres
      - rabbitmq
      - redis
    ports:
      - $VIRTUAL_HOST_PORT
    volumes:
      # contains refarm-site modules
      - $DEPS_DIR
      # source code volume
      - $SRC_DIR
      # contains media files
      - /opt/media/shopelectro/:$SRC_DIR/media/
    networks:
      - se-backend
      - se-frontend
    command: gunicorn shopelectro.wsgi:application -c /etc/gunicorn.py -b 0.0.0.0:$VIRTUAL_HOST_PORT

  app-stage:
    image: fidals/se:prod
    container_name: se-python-stage
    restart: always
    env_file:
      - env_files/app
      - env_files/credentials
      - env_files/paths
      - env_files/ports
    environment:
      - DJANGO_SETTINGS_MODULE=shopelectro.settings.dev
      - POSTGRES_DB=$STAGE_DB_NAME
      - REDIS_LOCATION_DEFAULT=$REDIS_STAGE_LOCATION_DEFAULT
      - REDIS_LOCATION_SESSION=$REDIS_STAGE_LOCATION_SESSION
      - REDIS_LOCATION_THUMBNAIL=$REDIS_STAGE_LOCATION_THUMBNAIL
      - REDIS_LOCATION_USER_AGENT=$REDIS_STAGE_LOCATION_USER_AGENT
      - SECRET_KEY=$STAGE_SECRET_KEY
    depends_on:
      - postgres
      - rabbitmq
    ports:
      - '$VIRTUAL_HOST_STAGE_EXPOSE_PORT:$VIRTUAL_HOST_STAGE_PORT'
    volumes:
      # contains refarm-site modules
      - $DEPS_DIR
    networks:
      - se-backend
      - se-frontend
    command: gunicorn shopelectro.wsgi:application -c /etc/gunicorn.py -b 0.0.0.0:$VIRTUAL_HOST_STAGE_PORT

  celery-beat:
    image: fidals/se:prod
    container_name: se-celery-beat
    restart: always
    env_file:
      - env_files/app
      - env_files/credentials
      - env_files/paths
    depends_on:
      - app
    networks:
      - se-backend
    command: celery -A shopelectro beat -l info

  celery-default-worker:
    image: fidals/se:prod
    container_name: se-celery-default-worker
    restart: always
    env_file:
      - env_files/app
      - env_files/credentials
      - env_files/paths
    depends_on:
      - app
    networks:
      - se-backend
    command: celery -A shopelectro worker -E -n worker.default@%%h -l info -Q default

  celery-mail-worker:
    image: fidals/se:prod
    container_name: se-celery-mail-worker
    restart: always
    env_file:
      - env_files/app
      - env_files/credentials
      - env_files/paths
    depends_on:
      - app
    networks:
      - se-backend
    command: celery -A shopelectro worker -E -n worker.mail@%%h -l info -Q mail

  celery-command-worker:
    image: fidals/se:prod
    container_name: se-celery-command-worker
    restart: always
    env_file:
      - env_files/app
      - env_files/credentials
      - env_files/paths
    depends_on:
      - app
    networks:
      - se-backend
    command: celery -A shopelectro worker -E -n worker.command@%%h -l info -Q command

  nginx:
    image: fidals/se-nginx:prod
    container_name: se-nginx
    restart: always
    env_file:
      - env_files/ports
    depends_on:
      - app
    volumes_from:
      - app
    ports:
      - '$VIRTUAL_HOST_EXPOSE_PORT:80'
    networks:
      - se-frontend
    command: nginx -g 'daemon off;'

  postgres:
    image: postgres:9.5
    restart: always
    container_name: se-postgres
    env_file:
      - env_files/credentials
    networks:
      - se-backend
    volumes:
      - /opt/database/shopelectro:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:management-alpine
    container_name: se-rabbitmq
    restart: always
    env_file:
      - env_files/credentials
    networks:
      - se-backend
    ports:
      - '5673:5672'
      - '15673:15672'

  redis:
    image: redis:alpine
    container_name: se-redis
    restart: always
    env_file:
      - env_files/credentials
    command: redis-server /data/redis.conf --requirepass $REDIS_PASSWORD
    volumes:
      - ../etc/redis/redis.conf:/data/redis.conf
    networks:
      - se-backend
    ports:
      - '6380:6379'

  # Контейнер при запуске создаёт бэкап.
  # Бэкап - это несколько архивов: database.tar.gz, media.tar.gz, static.tar.gz
  # в директории /opt/backup/shopelectro
  backup-data:
    image: alpine:latest
    container_name: se-backup-data
    volumes_from:
      - app
    volumes:
      - ../etc/backup-entrypoint.sh:/usr/bin/entrypoint.sh
      - /opt/backup/shopelectro:/opt/backup
      - /opt/database/shopelectro:/usr/app/src/database
    entrypoint:
      - sh
      - /usr/bin/entrypoint.sh

networks:
  se-backend:
  se-frontend:
